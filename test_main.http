# Endpoint raíz
# Validaciones:
# - Que la API este funcionando en el ambiente esperado
GET http://127.0.0.1:8000/
Accept: application/json

###

# Usuarios

# Registrar un nuevo usuario
# Rol requerido: invitado
# Validaciones:
# - Que no exista un usuario ya registrado mediante el DNI o correo eléctronico
# - Que el formato de los campos coincidan con los del dominio
POST http://127.0.0.1:8000/register
Content-Type: application/json

{
  "dniNumber": "08825553",
  "dniType": "CÉDULA CIUDADANÍA",
  "firstName": "XD",
  "lastName": "Ochoa",
  "phoneNumber": "0012558423",
  "emailAddress": "xdjnumdibba@gmail.com"
}

###

# Modificar un usuario
# Rol requerido: usuario/administrador
# Validaciones:
# - Que el usuario exista
# - Que el email o el DNI no coincidan con los de otro usuario
# - Que el formato de los campos coincidan con los del dominio
PUT http://127.0.0.1:8000/update-user/49d57c69-4898-481e-b51f-b03333aaaad9
Content-Type: application/json

{
  "dniNumber": "1236928592",
  "dniType": "CÉDULA CIUDADANÍA",
  "firstName": "Pablo",
  "lastName": "Hernandez",
  "phoneNumber": "3024508215",
  "emailAddress": "clxudia@gmail.com"
}

###

# Crear un usuario
# Rol requerido: administrador
# Validaciones:
# - Que el email o el DNI no coincidan con los de otro usuario
# - Que el formato de los campos coincidan con los del dominio
POST http://127.0.0.1:8000/create-user
Content-Type: application/json

{
  "dniNumber": "2036928592",
  "dniType": "CÉDULA CIUDADANÍA",
  "firstName": "Pablo",
  "lastName": "Hernandez",
  "phoneNumber": "3024508215",
  "emailAddress": "pablo@gmail.com",
  "status": "ACTIVO",
  "role": "USUARIO"
}


###

# Iniciar sesión de un usuario
# Rol requerido: invitado
# Validaciones:
# - Que DNI y correo electrónico coincidian con los de un usuario registrado
POST http://127.0.0.1:8000/login
Content-Type: application/json

{
  "dniNumber": "1036928592",
  "emailAddress": "fenixcaps@gmail.com"
}

###

# Celdas

# Crear una nueva celda
# Rol requerido: administrador
# Validaciones:
# - Que no se registre una celda con un número de espacio ya asociado a otra celda
# - Que el formato de los campos coincidan con los del dominio
POST http://127.0.0.1:8000/create-cell
Content-Type: application/json

{
  "spaceNumber": "1",
  "vehicleType": "AUTOMÓVIL",
  "status": "DISPONIBLE"
}

###

# Modificar una celda
# Rol requerido: administrador
# Validaciones:
# - Que exista la celda
# - Que el número de celda no coincida con el de otra celda
# - Que el formato de los campos coincidan con los del dominio

PUT http://127.0.0.1:8000/update-cell/c5f96e48-479b-4d05-8ea1-14a6a7c899bb
Content-Type: application/json

{
  "spaceNumber": "3",
  "vehicleType": "AUTOMÓVIL",
  "status": "MANTENIMIENTO"
}


###

# Vehículos

# Crear un nuevo vehículo
# Rol requerido: usuario
# Validaciones:
# - Que no se registre un vehículo sin un ID de usuario asociado
# - Que no se registre un vehiculo con un número de placa ya asociado a otro vehículo
# - Que el formato de los campos coincidan con los del dominio
POST http://127.0.0.1:8000/create-vehicle
Content-Type: application/json

{
  "userId": "c95905d5-45dc-4088-a479-92be9133c107",
  "licensePlate": "AAA727",
  "model": "Zephyr X1",
  "vehicleType": "AUTOMÓVIL"
}

###

# Reservas

# Crear una nueva reserva
# Rol requerido: usuario
# Validaciones:
# - Que no se registre una reserva sin un ID de usuario asociado
# - Que no se registre una reserva si la celda se encuentra en un estado diferente a disponible
# - Que no se registre una reserva si el tipo de vehiculo es incompatible con la celda
POST http://127.0.0.1:8000/create-reservation
Content-Type: application/json

{
  "userId": "c95905d5-45dc-4088-a479-92be9133c107",
  "cellId": "c5f96e48-479b-4d05-8ea1-14a6a7c899bb",
  "vehicleId": "5d4d0b1c-375e-406b-9953-f9e78da18f02"
}

###

# Cancelar una reserva
# Rol requerido: usuario
# Validaciones:
# - Que exista la reserva
POST http://127.0.0.1:8000/cancel-reservation
Content-Type: application/json

{
  "reservationId": "b0170041-a243-4c3c-83d4-8ba165c50b65"
}

###
# Rechazar una reserva
# Rol requerido: administrador
# Validaciones:
# - Que exista la reserva
POST http://127.0.0.1:8000/reject-reservation
Content-Type: application/json

{
  "reservationId": "20843587-3b38-4d32-b50f-95fdb25340d2"
}

###

# Confirmar una reserva
# Rol requerido: administrador
# Validaciones:
# - Que exista la reserva
POST http://127.0.0.1:8000/confirm-reservation
Content-Type: application/json

{
  "reservationId": "b0170041-a243-4c3c-83d4-8ba165c50b65"
}

###

# Completar una reserva
# Rol requerido: administrador
# Validaciones:
# - Que exista la reserva
POST http://127.0.0.1:8000/complete-reservation
Content-Type: application/json

{
  "reservationId": "932a7e9b-d95f-4923-bbdc-f9e0f84ad812"
}

###

# Obtener todas las reservas
# Rol requerido: administrador
# Validaciones:
# - Que existan reservas
GET http://127.0.0.1:8000/reservations
Content-Type: application/json

###

# Obtener una reserva por su ID
# Validaciones:
# - Que exista la reserva
GET http://127.0.0.1:8000/reservation/20843587-3b38-4d32-b50f-95fdb25340d2
Content-Type: application/json

###

# Empleados

# Crear un nuevo empleado
# Rol requerido: administrador
# Validaciones:
# - Que no se registre un empleado sin un ID de usuario asociado
# - Que no se registre un empleado con un ID de usuario ya asociado a otro empleado
# - Que el formato de los campos coincidan con los del dominio
POST http://127.0.0.1:8000/create-employee
Content-Type: application/json

{
  "userId": "c95905d5-45dc-4088-a479-92be9133c107",
  "position": "GERENTE",
  "salary": "1000000"
}

###

# Modificar un empleado
# Rol requerido: administrador
# Validaciones:
# - Que exista el empleado
PUT http://127.0.0.1:8000/update-employee/1c947a6b-fae8-476b-a902-9b2535deda7a
Content-Type: application/json

{
  "position": "GERENTE",
  "salary": "50"
}

